{"version":3,"sources":["App.js","CommonValidationEngine.js","CommonValidationFunctions.js","Flip.js","reportWebVitals.js","index.js"],"names":["TASKS","App","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","assignTaskToPerson","taskIndex","setState","person1Task","person2Task","Math","floor","random","state","_inherits","_createClass","key","value","_this2","_this$state","React","createElement","className","map","task","index","onClick","Component","CommonValidationEngine","_CommonValidationFunc","form","formValidator","element","fnName","console","log","type","n","errorCount","tempForm","self","Object","keys","parseInt","isNaN","hasAttribute","src","name","id","verify","i","e","err","commonValidatorValid","message","CommonValidationFunctions","s","length","Flip","handleTaskChange","taskId","target","task1","task2","assignTasks","document","getElementById","getElementsByTagName","text1","text2","commonValidationFields","taskArray","cards","card","_objectSpread","splice","selectedCardIds","handleCardClick","cardId","_this$state2","cardIndex","findIndex","selectedCardIdsCopy","_toConsumableArray","includes","push","flippedCards","isFlipped","setTimeout","checkForMatch","_this$state3","_selectedCardIds$map","find","_selectedCardIds$map2","_slicedToArray","card1","card2","updatedCards","resetCards","_this$state4","_this$state5","placeholder","onChange","concat","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.769b1a24.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nconst TASKS = ['Utencils cleaning', 'Cooking', 'Cloth wash' , 'Parcel receive', 'Massage', 'House Cleaning','Mopping']; // Preconfigured tasks\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      person1Task: '',\n      person2Task: '',\n    };\n  }\n\n  assignTaskToPerson = (taskIndex) => {\n    this.setState({ person1Task: '',person2Task: '',})\n    const randomPerson = Math.floor(Math.random() * 2); \n\n    if (randomPerson === 0) {\n      this.setState({ person1Task: TASKS[taskIndex] });\n    } else {\n      this.setState({ person2Task: TASKS[taskIndex] });\n    }\n  };\n\n  render() {\n    const { person1Task, person2Task } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"title mt-5 mb-4 title\">Task Assignment App</h1>\n        <div className=\"row mb-3 task-list\">\n          {TASKS.map((task, index) => (\n            <div\n              key={index}\n              className=\"col-md-4 task-item\"\n              onClick={() => this.assignTaskToPerson(index)}\n            >\n              {task}\n            </div>\n          ))}\n        </div>\n        <div className=\"row mb-3 persons\">\n          <div className=\"col-md-4 person\">\n            <h3>Person1</h3>\n            <p>{person1Task}</p>\n          </div>\n          <div className=\"col-md-4 person\">\n            <h3>Person2</h3>\n            <p>{person2Task}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import CommonValidationFunctions from './CommonValidationFunctions'\n\nexport default class CommonValidationEngine extends CommonValidationFunctions {\n\tconstructor(form, formValidator) {\n\t\tsuper(); // must call while extending a class, this constructor is from extending class\n\t\tthis.form = form;\n\t\tthis.formValidator = formValidator;\n\t}\n\n\tcommonValidatorValid(element, fnName) {\n\t\tconsole.log(element.type+\" :: \"+fnName);\n\t\tif (element.type === 'text' || element.type === 'textarea' || element.type === 'email' || element.type === 'tel') { // More element type goes here\n\t\t\treturn this[fnName](element.value);\n\t\t} else {\n\t\t\treturn this[fnName](element);\n\t\t}\n\t}\n\n\tcommonValidationFields() {\n\t\tlet errorCount = 0,\n\t\t\telement,\n\t\t\tn,\n\t\t\ttempForm = this.form,\n\t\t\tformValidator = this.formValidator,\n\t\t\tself = this;\n\n\t\tObject.keys(tempForm).map(function (key, index) {\n\t\t\tif (typeof parseInt(key) == \"number\" && !isNaN(parseInt(key))) {\n\t\t\t\telement = tempForm[index];\n\t\t\t\tif (!element.hasAttribute(\"name\")) {\n\t\t\t\t\tn = element.id;\n\t\t\t\t} else if (element.hasAttribute(\"src\")) {\n\t\t\t\t\tn = element.src;\n\t\t\t\t} else {\n\t\t\t\t\tn = element.name;\n\t\t\t\t}\n\t\t\t\tif (formValidator[n] && formValidator[n].verify) {\n\t\t\t\t\t(formValidator[n].verify).map(function (i, e) {\n\t\t\t\t\t\tlet err = self.commonValidatorValid(element, i);\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tformValidator[n].err = err;\n\t\t\t\t\t\t\telement.className=\"error-box\";\n\t\t\t\t\t\t\tconsole.log(element + \"ERROR \" + formValidator[n].message[e] || \"Error occured\"); // code for error message display\n\t\t\t\t\t\t\terrorCount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (errorCount > 0) {\n\t\t\treturn false;\n\t\t}\n\t\tconsole.log(\"Validation starts with validation engine\" + this.form + \" :: \");\n\t\treturn true;\n\t}\n}\n","export default class CommonValidationFunctions{\n    constructor(){\n        this.err=\"\";\n    }\n    nullCheck(s) {\n      this.err = s.length ? 0 : 5;\n    return this.err;\n    }\n   \n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport CommonValidationEngine from './CommonValidationEngine';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nclass Flip extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task1: '',\n      task2: '',\n      cards: [\n        { id: 1, task: '', isFlipped: false },\n        { id: 2, task: '', isFlipped: false }\n      ],\n      selectedCardIds: []\n    };\n  }\n\n  handleTaskChange = (e, taskId) => {\n    const { value } = e.target;\n    if (taskId === 1) {\n      this.setState({ task1: value });\n    } else if (taskId === 2) {\n      this.setState({ task2: value });\n    }\n  };\n\n  assignTasks = () => {\n    let form = document.getElementById(\"input-section\").getElementsByTagName(\"input\"),\n    form_validator_check = {\n      text1: {\n        verify: [\"nullCheck\"],\n        message: [\"Please enter the text\"]\n      },\n      text2: {\n        verify: [\"nullCheck\"],\n        message: [\"Please enter the text\"]\n      }\n    };\n  let validationOps = new CommonValidationEngine(form, form_validator_check);\n  if (validationOps.commonValidationFields()) {\n    \n    console.log(\"Final results :: \" );\n\n    const { task1, task2 } = this.state;\n    const taskArray = [task1, task2];\n    const cards = this.state.cards.map((card) => ({\n      ...card,\n      task: taskArray.splice(Math.floor(Math.random() * taskArray.length), 1)[0]\n    }));\n    this.setState({ cards, selectedCardIds: [],task1:'',task2:'' });\n\n\n  }\n  };\n\n  handleCardClick = (cardId) => {\n    const { cards, selectedCardIds } = this.state;\n    const cardIndex = cards.findIndex((card) => card.id === cardId);\n    const selectedCardIdsCopy = [...selectedCardIds];\n\n    if (!selectedCardIdsCopy.includes(cardId)) {\n      selectedCardIdsCopy.push(cardId);\n    }\n\n    const flippedCards = cards.map((card, index) => {\n      if (index === cardIndex) {\n        return {\n          ...card,\n          isFlipped: true\n        };\n      }\n      return card;\n    });\n\n    this.setState({ cards: flippedCards, selectedCardIds: selectedCardIdsCopy }, () => {\n      if (selectedCardIdsCopy.length === 2) {\n        setTimeout(this.checkForMatch, 1000);\n      }\n    });\n  };\n\n  checkForMatch = () => {\n    const { cards, selectedCardIds } = this.state;\n\n    if (selectedCardIds.length === 2) {\n      const [card1, card2] = selectedCardIds.map((id) => cards.find((card) => card.id === id));\n\n      if (card1.task === card2.task) {\n        const updatedCards = cards.map((card) =>\n          selectedCardIds.includes(card.id) ? { ...card, isFlipped: false } : card\n        );\n        this.setState({ cards: updatedCards, selectedCardIds: [] });\n      } else {\n        setTimeout(this.resetCards, 1000);\n      }\n    }\n  };\n\n  resetCards = () => {\n    const { cards, selectedCardIds } = this.state;\n\n    const updatedCards = cards.map((card) =>\n      selectedCardIds.includes(card.id) ? { ...card, isFlipped: false } : card\n    );\n    this.setState({ cards: updatedCards, selectedCardIds: [] });\n  };\n\n  render() {\n    const { task1, task2, cards } = this.state;\n\n    return (\n      <div className=\"container\">\n      <h1 className=\"title mt-5 mb-4\">Task Guessing Game</h1>\n      <div className=\"row mb-3\" id=\"input-section\">\n        <div className=\"col-md-4\">\n          <input\n            type=\"text\"\n            id=\"text1\"\n            name=\"text1\"\n            className=\"form-control\"\n            placeholder=\"Task 1\"\n            value={task1}\n            onChange={(e) => this.handleTaskChange(e, 1)}\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <input\n            type=\"text\"\n            id=\"text2\"\n            name=\"text2\"\n            className=\"form-control\"\n            placeholder=\"Task 2\"\n            value={task2}\n            onChange={(e) => this.handleTaskChange(e, 2)}\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <button className=\"btn btn-primary\" onClick={this.assignTasks}>\n            Assign Tasks\n          </button>\n        </div>\n      </div>\n      <div className=\"row\">\n        {cards.map((card) => (\n          <div\n            key={card.id}\n            className={`col-md-6 col-lg-3 card ${card.isFlipped ? 'flipped' : ''}`}\n            onClick={() => this.handleCardClick(card.id)}\n          >\n            <div className=\"card-inner\">\n              <div className=\"card-front\">?</div>\n              <div className=\"card-back\">{card.task}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default Flip;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport Flip from './Flip';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n    <Flip/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}